/* Times ------------------------------------------------------------------ */
var date = new Date(piccoloTime)
date.setSeconds(date.getSeconds()+1) // add one to sychronise

//piccolo time html elements
var phours = document.getElementById('phours');
var pmins = document.getElementById('pmin');
var psecs = document.getElementById('psec');
//local time html elements
var lhours = document.getElementById('lhours');
var lmins = document.getElementById('lmin');
var lsecs = document.getElementById('lsec');

//set interval to display new time every second
var timer = setInterval(displayTime, 1000);

//display time with one second increment
function displayTime(){
  date.setSeconds(date.getSeconds()+1);
  phours.innerHTML=('0'+date.getHours()).slice(-2); //0 and slice is to format 1 to 01
  pmins.innerHTML=('0'+date.getMinutes()).slice(-2);
  psecs.innerHTML=('0'+date.getSeconds()).slice(-2);
  //local time
  ldate=new Date();
  lhours.innerHTML=('0'+ldate.getHours()).slice(-2);
  lmins.innerHTML=('0'+ldate.getMinutes()).slice(-2);
  lsecs.innerHTML=('0'+ldate.getSeconds()).slice(-2);

}

/*updates/ synchronises the piccolo time*/
function updateClocks(ptime){
  date = new Date(ptime);
  date.setSeconds(date.getSeconds()+1); // add one to sychronise
  displayTime();
}


/* End times ------------------------------------------------------------------ */

/* Usage (CPU/Memory) --------------------------------------------------------- */

//set interval to display new usage every second
var usageTimer = setInterval(updateInfo, 2000);
x=9
function updateInfo(){
  getInfo(true, true, true);
}

function updateCPU(value){
  $('#cpu').attr('aria-valuenow', value).css('width', value+'%');
  $('#cpu').html(value+'%')
}

function updateMemory(value){
  $('#memory').attr('aria-valuenow', value).css('width', value+'%');
  $('#memory').html(value+'%')
}

function updateStatus(status, state){
  $('#status').html(status)
  $('#status-icon').css('color', state)
}

function getInfo(cpu, memory, status, clock){
    $.ajax({
    url: "info",
    cache: false,
    dataType: "json",
    success: function(data) {
      console.log(data);
      if(cpu){
        updateCPU(data.statusInfo.cpu);
      }
      if(memory){
        updateMemory(data.statusInfo.memory);
      }
      if(status){
        updateStatus(data.statusInfo.status, data.statusInfo.state);
        updateTableFooter(data.statusInfo.status, data.statusInfo.state);
        updateEditable(data.statusInfo.state=='green');
      }
      if(clock){
        updateClocks(data.piccoloTime);
      }
    },
    error: function (request, status, error) { console.log(status + ", " + error); }
  });
}

/* END Usage (CPU/Memory) ------------------------------------------------------ */


/* Record Table --------------------------------------------------------- */


/* changes record to editable / not editable. Param editable is boolean */
function updateEditable(editable){
  edtable = document.getElementById('record-table');
  edbody = edtable.getElementsByTagName('tbody')[0]; //body of table
  if(editable){
    edbody.className = 'table-editable'
  } else {
    edbody.className = 'table-editable-disabled'
  }


  for (var i=0, row; row=edbody.rows[i]; i++){ //iterate through rows
    for(var j=1, col; col=row.cells[j]; j++){
      col.getElementsByTagName('span')[0].contentEditable=editable;
    }
  }

}

/*updates the status table of the record-table footer*/
function updateTableFooter(status, state){
  $('#record-table-statusinfo').css('color', state);
  $('#record-table-statusicon').css('color', state);
  if (state=='green'){
      var msg = 'you can edit the table parameters'
  } else {
      var msg = 'you can not edit the table parameters'
  }
  statusinfo = '<strong>Status: </strong>' + status+ '; ' + msg;
  $('#record-table-statusinfo').html(statusinfo);
}




/*Prevent user from entering non number values*/
$("#record-table").keypress(function(e) {
    if (isNaN(String.fromCharCode(e.which)) && (e.which!=46)) e.preventDefault();
});


/* END Record Table --------------------------------------------------------- */
